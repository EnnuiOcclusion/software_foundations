DIGEST 904da4fbd5b6308a1ca6dbd92af8fbe1
FPoly
R280:284 Lists <> <> lib
ind 1089:1096 <> boollist
constr 1112:1119 <> bool_nil
constr 1136:1144 <> bool_cons
R1123:1130 Poly <> boollist ind
R1152:1155 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1164:1167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1168:1175 Poly <> boollist ind
R1156:1163 Poly <> boollist ind
R1148:1151 Basics <> bool ind
ind 1649:1652 <> list
constr 1677:1679 <> nil
constr 1694:1697 <> cons
R1683:1686 Poly <> list ind
R1688:1688 Poly <> X var
R1702:1705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1712:1715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1716:1719 Poly <> list ind
R1721:1721 Poly <> X var
R1706:1709 Poly <> list ind
R1711:1711 Poly <> X var
R1701:1701 Poly <> X var
R2612:2615 Poly <> list ind
R2983:2985 Poly <> nil constr
R2987:2989 Coq.Init.Datatypes <> nat ind
R3203:3206 Poly <> cons constr
R3215:3217 Poly <> nil constr
R3219:3221 Coq.Init.Datatypes <> nat ind
R3208:3210 Coq.Init.Datatypes <> nat ind
R3612:3614 Poly <> nil constr
R3882:3885 Poly <> cons constr
R4567:4570 Poly <> cons constr
R4579:4582 Poly <> cons constr
R4591:4593 Poly <> nil constr
R4595:4597 Coq.Init.Datatypes <> nat ind
R4584:4586 Coq.Init.Datatypes <> nat ind
R4572:4574 Coq.Init.Datatypes <> nat ind
def 4950:4955 <> repeat
R4973:4973 Poly <> X var
R4985:4987 Coq.Init.Datatypes <> nat ind
R4992:4995 Poly <> list ind
R4997:4997 Poly <> X var
R5010:5014 Poly <> count var
R5030:5032 Poly <> nil constr
R5034:5034 Poly <> X var
R5040:5040 Coq.Init.Datatypes <> S constr
R5052:5055 Poly <> cons constr
R5062:5067 Poly <> repeat def
R5071:5071 Poly <> x var
R5069:5069 Poly <> X var
R5059:5059 Poly <> x var
R5057:5057 Poly <> X var
def 5238:5249 <> test_repeat1
R5269:5271 Coq.Init.Logic <> :type_scope:x_'='_x not
R5255:5260 Poly <> repeat def
R5262:5264 Coq.Init.Datatypes <> nat ind
R5272:5275 Poly <> cons constr
R5284:5287 Poly <> cons constr
R5296:5298 Poly <> nil constr
R5300:5302 Coq.Init.Datatypes <> nat ind
R5289:5291 Coq.Init.Datatypes <> nat ind
R5277:5279 Coq.Init.Datatypes <> nat ind
def 5462:5473 <> test_repeat2
R5498:5500 Coq.Init.Logic <> :type_scope:x_'='_x not
R5479:5484 Poly <> repeat def
R5491:5495 Basics <> false constr
R5486:5489 Basics <> bool ind
R5501:5504 Poly <> cons constr
R5518:5520 Poly <> nil constr
R5522:5525 Basics <> bool ind
R5511:5515 Basics <> false constr
R5506:5509 Basics <> bool ind
mod 5564:5576 <> MumbleGrumble
ind 5700:5705 MumbleGrumble mumble
constr 5721:5721 MumbleGrumble a
constr 5736:5736 MumbleGrumble b
constr 5768:5768 MumbleGrumble c
R5725:5730 Poly <> mumble ind
R5746:5749 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5753:5756 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5757:5762 Poly <> mumble ind
R5750:5752 Coq.Init.Datatypes <> nat ind
R5740:5745 Poly <> mumble ind
R5772:5777 Poly <> mumble ind
ind 5791:5797 MumbleGrumble grumble
constr 5822:5822 MumbleGrumble d
constr 5850:5850 MumbleGrumble e
R5832:5835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5836:5842 Poly <> grumble ind
R5844:5844 Poly <> X var
R5826:5831 Poly MumbleGrumble mumble ind
R5855:5858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5859:5865 Poly <> grumble ind
R5867:5867 Poly <> X var
R5854:5854 Poly <> X var
R6128:6128 Poly MumbleGrumble d constr
R6138:6138 Poly MumbleGrumble b constr
R6140:6140 Poly MumbleGrumble a constr
R6130:6135 Poly MumbleGrumble mumble ind
R6152:6152 Poly MumbleGrumble d constr
R6160:6160 Poly MumbleGrumble b constr
R6162:6162 Poly MumbleGrumble a constr
R6154:6157 Basics <> bool ind
R6176:6176 Poly MumbleGrumble e constr
R6183:6186 Basics <> true constr
R6178:6181 Basics <> bool ind
R6196:6196 Poly MumbleGrumble e constr
R6206:6206 Poly MumbleGrumble b constr
R6208:6208 Poly MumbleGrumble c constr
R6198:6203 Poly MumbleGrumble mumble ind
R6220:6220 Poly MumbleGrumble c constr
R6239:6251 Poly MumbleGrumble <> mod
def 6529:6535 <> repeat'
R6549:6552 Poly <> list ind
R6554:6554 Poly <> X var
R6567:6571 Poly <> count var
R6594:6596 Poly <> nil constr
R6598:6598 Poly <> X var
R6604:6604 Coq.Init.Datatypes <> S constr
R6616:6619 Poly <> cons constr
R6626:6632 Poly <> repeat' def
R6636:6636 Poly <> x var
R6634:6634 Poly <> X var
R6623:6623 Poly <> x var
R6621:6621 Poly <> X var
R6736:6742 Poly <> repeat' def
R6798:6803 Poly <> repeat def
def 9350:9357 <> repeat''
R9371:9374 Poly <> list ind
R9376:9376 Poly <> X var
R9389:9393 Poly <> count var
R9416:9418 Poly <> nil constr
R9426:9426 Coq.Init.Datatypes <> S constr
R9438:9441 Poly <> cons constr
R9448:9455 Poly <> repeat'' def
R9459:9459 Poly <> x var
R9445:9445 Poly <> x var
def 9785:9791 <> list123
R9798:9801 Poly <> cons constr
R9810:9813 Poly <> cons constr
R9822:9825 Poly <> cons constr
R9834:9836 Poly <> nil constr
R9838:9840 Coq.Init.Datatypes <> nat ind
R9827:9829 Coq.Init.Datatypes <> nat ind
R9815:9817 Coq.Init.Datatypes <> nat ind
R9803:9805 Coq.Init.Datatypes <> nat ind
def 9914:9921 <> list123'
R9928:9931 Poly <> cons constr
R9938:9941 Poly <> cons constr
R9948:9951 Poly <> cons constr
R9958:9960 Poly <> nil constr
R10581:10583 Poly <> nil constr
R10581:10583 Poly <> nil constr
R10600:10603 Poly <> cons constr
R10600:10603 Poly <> cons constr
R10624:10629 Poly <> repeat def
R10624:10629 Poly <> repeat def
def 10716:10724 <> list123''
R10729:10732 Poly <> cons constr
R10737:10740 Poly <> cons constr
R10745:10748 Poly <> cons constr
R10752:10754 Poly <> nil constr
def 10944:10952 <> repeat'''
R10970:10970 Poly <> X var
R10982:10984 Coq.Init.Datatypes <> nat ind
R10989:10992 Poly <> list ind
R10994:10994 Poly <> X var
R11007:11011 Poly <> count var
R11034:11036 Poly <> nil constr
R11042:11042 Coq.Init.Datatypes <> S constr
R11054:11057 Poly <> cons constr
R11062:11070 Poly <> repeat''' def
R11072:11072 Poly <> x var
R11059:11059 Poly <> x var
ind 11671:11675 <> list'
constr 11700:11703 <> nil'
constr 11717:11721 <> cons'
R11707:11711 Poly <> list' ind
R11707:11711 Poly <> X var
R11726:11729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11735:11738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11739:11743 Poly <> list' ind
R11739:11743 Poly <> X var
R11730:11734 Poly <> list' ind
R11730:11734 Poly <> X var
R11725:11725 Poly <> X var
def 12179:12181 <> app
R12203:12206 Poly <> list ind
R12208:12208 Poly <> X var
R12227:12230 Poly <> list ind
R12232:12232 Poly <> X var
R12246:12247 Poly <> l1 var
R12258:12260 Poly <> nil constr
R12270:12271 Poly <> l2 var
R12277:12280 Poly <> cons constr
R12289:12292 Poly <> cons constr
R12297:12299 Poly <> app def
R12303:12304 Poly <> l2 var
def 12324:12326 <> rev
R12340:12343 Poly <> list ind
R12345:12345 Poly <> X var
R12350:12353 Poly <> list ind
R12355:12355 Poly <> X var
R12368:12368 Poly <> l var
R12379:12381 Poly <> nil constr
R12391:12393 Poly <> nil constr
R12399:12402 Poly <> cons constr
R12411:12413 Poly <> app def
R12424:12427 Poly <> cons constr
R12431:12433 Poly <> nil constr
R12416:12418 Poly <> rev def
def 12453:12458 <> length
R12476:12479 Poly <> list ind
R12481:12481 Poly <> X var
R12486:12488 Coq.Init.Datatypes <> nat ind
R12501:12501 Poly <> l var
R12512:12514 Poly <> nil constr
R12525:12528 Poly <> cons constr
R12538:12538 Coq.Init.Datatypes <> S constr
R12541:12546 Poly <> length def
def 12568:12576 <> test_rev1
R12607:12610 Coq.Init.Logic <> :type_scope:x_'='_x not
R12630:12630 Coq.Init.Logic <> :type_scope:x_'='_x not
R12582:12584 Poly <> rev def
R12587:12590 Poly <> cons constr
R12595:12598 Poly <> cons constr
R12602:12604 Poly <> nil constr
R12611:12614 Poly <> cons constr
R12619:12622 Poly <> cons constr
R12626:12628 Poly <> nil constr
def 12668:12676 <> test_rev2
R12700:12702 Coq.Init.Logic <> :type_scope:x_'='_x not
R12681:12683 Poly <> rev def
R12686:12689 Poly <> cons constr
R12696:12698 Poly <> nil constr
R12691:12694 Basics <> true constr
R12703:12706 Poly <> cons constr
R12713:12715 Poly <> nil constr
R12708:12711 Basics <> true constr
def 12753:12764 <> test_length1
R12804:12806 Coq.Init.Logic <> :type_scope:x_'='_x not
R12767:12772 Poly <> length def
R12775:12778 Poly <> cons constr
R12783:12786 Poly <> cons constr
R12791:12794 Poly <> cons constr
R12798:12800 Poly <> nil constr
def 13280:13284 <> mynil
R13289:13291 Poly <> nil constr
def 13858:13862 <> mynil
R13866:13869 Poly <> list ind
R13871:13873 Coq.Init.Datatypes <> nat ind
R13878:13880 Poly <> nil constr
R14009:14011 Poly <> nil constr
def 14026:14031 <> mynil'
R14037:14039 Poly <> nil constr
R14041:14043 Coq.Init.Datatypes <> nat ind
R14325:14328 Poly <> cons constr
not 14312:14312 <> ::x_'::'_x
R14410:14412 Poly <> nil constr
not 14401:14401 <> ::'['_']'
R14445:14448 Poly <> cons constr
R14456:14459 Poly <> cons constr
R14463:14464 Poly <> ::'['_']' not
not 14424:14424 <> ::'['_x_';'_'..'_';'_x_']'
R14494:14496 Poly <> app def
not 14481:14481 <> ::x_'++'_x
def 14629:14638 <> list123'''
R14643:14643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14645:14646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14648:14649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14651:14651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 14959:14967 <> app_nil_r
R14997:15000 Poly <> list ind
R15002:15002 Poly <> X var
R15014:15016 Coq.Init.Logic <> :type_scope:x_'='_x not
R15008:15011 Poly <> ::x_'++'_x not
R15007:15007 Poly <> l var
R15012:15013 Poly <> ::'['_']' not
R15017:15017 Poly <> l var
prf 15137:15145 <> app_assoc
R15165:15168 Poly <> list ind
R15170:15170 Poly <> A var
R15187:15189 Coq.Init.Logic <> :type_scope:x_'='_x not
R15177:15180 Poly <> ::x_'++'_x not
R15176:15176 Poly <> l var
R15182:15185 Poly <> ::x_'++'_x not
R15181:15181 Poly <> m var
R15186:15186 Poly <> n var
R15190:15190 Poly <> ::x_'++'_x not
R15197:15201 Poly <> ::x_'++'_x not
R15192:15195 Poly <> ::x_'++'_x not
R15191:15191 Poly <> l var
R15196:15196 Poly <> m var
R15202:15202 Poly <> n var
prf 15332:15341 <> app_length
R15370:15373 Poly <> list ind
R15375:15375 Poly <> X var
R15398:15400 Coq.Init.Logic <> :type_scope:x_'='_x not
R15381:15386 Poly <> length def
R15391:15394 Poly <> ::x_'++'_x not
R15389:15390 Poly <> l1 var
R15395:15396 Poly <> l2 var
R15410:15412 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15401:15406 Poly <> length def
R15408:15409 Poly <> l1 var
R15413:15418 Poly <> length def
R15420:15421 Poly <> l2 var
prf 15704:15716 <> rev_app_distr
R15737:15740 Poly <> list ind
R15742:15742 Poly <> X var
R15762:15764 Coq.Init.Logic <> :type_scope:x_'='_x not
R15748:15750 Poly <> rev def
R15755:15758 Poly <> ::x_'++'_x not
R15753:15754 Poly <> l1 var
R15759:15760 Poly <> l2 var
R15771:15774 Poly <> ::x_'++'_x not
R15765:15767 Poly <> rev def
R15769:15770 Poly <> l2 var
R15775:15777 Poly <> rev def
R15779:15780 Poly <> l1 var
R15868:15876 Poly <> app_nil_r thm
R15868:15876 Poly <> app_nil_r thm
R15868:15876 Poly <> app_nil_r thm
R15926:15934 Poly <> app_assoc thm
R15926:15934 Poly <> app_assoc thm
R15926:15934 Poly <> app_assoc thm
prf 15969:15982 <> rev_involutive
R16014:16017 Poly <> list ind
R16019:16019 Poly <> X var
R16035:16037 Coq.Init.Logic <> :type_scope:x_'='_x not
R16024:16026 Poly <> rev def
R16029:16031 Poly <> rev def
R16033:16033 Poly <> l var
R16038:16038 Poly <> l var
R16128:16140 Poly <> rev_app_distr thm
R16128:16140 Poly <> rev_app_distr thm
R16128:16140 Poly <> rev_app_distr thm
ind 16496:16499 <> prod
constr 16526:16529 <> pair
R16534:16537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16539:16542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16543:16546 Poly <> prod ind
R16550:16550 Poly <> Y var
R16548:16548 Poly <> X var
R16538:16538 Poly <> Y var
R16533:16533 Poly <> X var
R16564:16567 Poly <> pair constr
R16564:16567 Poly <> pair constr
R16714:16717 Poly <> pair constr
not 16698:16698 <> ::'('_x_','_x_')'
R16853:16856 Poly <> prod ind
not 16841:16841 <> :type_scope:x_'*'_x
def 17455:17457 <> fst
R17478:17480 Poly <> :type_scope:x_'*'_x not
R17477:17477 Poly <> X var
R17481:17481 Poly <> Y var
R17486:17486 Poly <> X var
R17499:17499 Poly <> p var
R17510:17510 Poly <> ::'('_x_','_x_')' not
R17512:17513 Poly <> ::'('_x_','_x_')' not
R17515:17515 Poly <> ::'('_x_','_x_')' not
def 17541:17543 <> snd
R17564:17566 Poly <> :type_scope:x_'*'_x not
R17563:17563 Poly <> X var
R17567:17567 Poly <> Y var
R17572:17572 Poly <> Y var
R17585:17585 Poly <> p var
R17596:17596 Poly <> ::'('_x_','_x_')' not
R17598:17599 Poly <> ::'('_x_','_x_')' not
R17601:17601 Poly <> ::'('_x_','_x_')' not
def 17848:17854 <> combine
R17875:17878 Poly <> list ind
R17880:17880 Poly <> X var
R17889:17892 Poly <> list ind
R17894:17894 Poly <> Y var
R17910:17913 Poly <> list ind
R17917:17917 Poly <> :type_scope:x_'*'_x not
R17916:17916 Poly <> X var
R17918:17918 Poly <> Y var
R17936:17937 Poly <> ly var
R17932:17933 Poly <> lx var
R17948:17949 Poly <> ::'['_']' not
R17957:17958 Poly <> ::'['_']' not
R17967:17968 Poly <> ::'['_']' not
R17973:17974 Poly <> ::'['_']' not
R17981:17984 Poly <> ::x_'::'_x not
R17990:17993 Poly <> ::x_'::'_x not
R18006:18010 Poly <> ::x_'::'_x not
R18024:18024 Poly <> ::x_'::'_x not
R18000:18000 Poly <> ::'('_x_','_x_')' not
R18002:18003 Poly <> ::'('_x_','_x_')' not
R18005:18005 Poly <> ::'('_x_','_x_')' not
R18011:18017 Poly <> combine def
def 18841:18846 <> splitX
R18866:18869 Poly <> list ind
R18873:18873 Poly <> :type_scope:x_'*'_x not
R18872:18872 Poly <> X var
R18874:18874 Poly <> Y var
R18880:18883 Poly <> list ind
R18885:18885 Poly <> X var
R18898:18898 Poly <> l var
R18909:18911 Poly <> nil constr
R18916:18918 Poly <> nil constr
R18929:18932 Poly <> ::x_'::'_x not
R18924:18924 Poly <> ::'('_x_','_x_')' not
R18926:18926 Poly <> ::'('_x_','_x_')' not
R18928:18928 Poly <> ::'('_x_','_x_')' not
R18939:18942 Poly <> ::x_'::'_x not
R18943:18948 Poly <> splitX def
def 18969:18974 <> splitY
R18994:18997 Poly <> list ind
R19001:19001 Poly <> :type_scope:x_'*'_x not
R19000:19000 Poly <> X var
R19002:19002 Poly <> Y var
R19008:19011 Poly <> list ind
R19013:19013 Poly <> Y var
R19026:19026 Poly <> l var
R19037:19039 Poly <> nil constr
R19044:19046 Poly <> nil constr
R19057:19060 Poly <> ::x_'::'_x not
R19052:19052 Poly <> ::'('_x_','_x_')' not
R19054:19054 Poly <> ::'('_x_','_x_')' not
R19056:19056 Poly <> ::'('_x_','_x_')' not
R19067:19070 Poly <> ::x_'::'_x not
R19071:19076 Poly <> splitY def
def 19097:19101 <> split
R19121:19124 Poly <> list ind
R19128:19128 Poly <> :type_scope:x_'*'_x not
R19127:19127 Poly <> X var
R19129:19129 Poly <> Y var
R19150:19150 Poly <> :type_scope:x_'*'_x not
R19157:19161 Poly <> :type_scope:x_'*'_x not
R19168:19168 Poly <> :type_scope:x_'*'_x not
R19151:19154 Poly <> list ind
R19156:19156 Poly <> X var
R19162:19165 Poly <> list ind
R19167:19167 Poly <> Y var
R19179:19179 Poly <> ::'('_x_','_x_')' not
R19188:19189 Poly <> ::'('_x_','_x_')' not
R19198:19198 Poly <> ::'('_x_','_x_')' not
R19180:19185 Poly <> splitX def
R19187:19187 Poly <> l var
R19190:19195 Poly <> splitY def
R19197:19197 Poly <> l var
def 19210:19219 <> test_split
R19251:19253 Coq.Init.Logic <> :type_scope:x_'='_x not
R19224:19228 Poly <> split def
R19230:19230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19240:19240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19250:19250 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19241:19241 Poly <> ::'('_x_','_x_')' not
R19243:19243 Poly <> ::'('_x_','_x_')' not
R19249:19249 Poly <> ::'('_x_','_x_')' not
R19244:19248 Basics <> false constr
R19231:19231 Poly <> ::'('_x_','_x_')' not
R19233:19233 Poly <> ::'('_x_','_x_')' not
R19239:19239 Poly <> ::'('_x_','_x_')' not
R19234:19238 Basics <> false constr
R19254:19254 Poly <> ::'('_x_','_x_')' not
R19260:19260 Poly <> ::'('_x_','_x_')' not
R19274:19274 Poly <> ::'('_x_','_x_')' not
R19255:19255 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19257:19257 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19259:19259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19261:19261 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19267:19267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19273:19273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19268:19272 Basics <> false constr
R19262:19266 Basics <> false constr
ind 19554:19559 <> option
constr 19584:19587 <> Some
constr 19609:19612 <> None
R19592:19595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19596:19601 Poly <> option ind
R19603:19603 Poly <> X var
R19591:19591 Poly <> X var
R19616:19621 Poly <> option ind
R19623:19623 Poly <> X var
R19637:19640 Poly <> Some constr
R19637:19640 Poly <> Some constr
R19659:19662 Poly <> None constr
R19659:19662 Poly <> None constr
def 19776:19784 <> nth_error
R19802:19805 Poly <> list ind
R19807:19807 Poly <> X var
R19815:19817 Coq.Init.Datatypes <> nat ind
R19841:19846 Poly <> option ind
R19848:19848 Poly <> X var
R19861:19861 Poly <> l var
R19872:19873 Poly <> ::'['_']' not
R19878:19881 Poly <> None constr
R19888:19891 Poly <> ::x_'::'_x not
R19901:19907 Basics <> beq_nat def
R19911:19911 Coq.Init.Datatypes <> O constr
R19909:19909 Poly <> n var
R19930:19938 Poly <> nth_error def
R19944:19947 Coq.Init.Peano <> pred syndef
R19949:19949 Poly <> n var
R19918:19921 Poly <> Some constr
def 19968:19982 <> test_nth_error1
R20007:20009 Coq.Init.Logic <> :type_scope:x_'='_x not
R19986:19994 Poly <> nth_error def
R19996:19996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19998:19998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20000:20000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20002:20002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20004:20004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20010:20013 Poly <> Some constr
def 20051:20065 <> test_nth_error2
R20090:20092 Coq.Init.Logic <> :type_scope:x_'='_x not
R20069:20077 Poly <> nth_error def
R20079:20079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20083:20083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20087:20087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20084:20084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20086:20086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20080:20080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20082:20082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20093:20096 Poly <> Some constr
R20098:20098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20100:20100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20136:20150 <> test_nth_error3
R20172:20174 Coq.Init.Logic <> :type_scope:x_'='_x not
R20154:20162 Poly <> nth_error def
R20164:20164 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20169:20169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20165:20168 Basics <> true constr
R20175:20178 Poly <> None constr
def 20434:20441 <> hd_error
R20459:20462 Poly <> list ind
R20464:20464 Poly <> X var
R20469:20474 Poly <> option ind
R20476:20476 Poly <> X var
R20489:20489 Poly <> l var
R20503:20505 Poly <> nil constr
R20510:20513 Poly <> None constr
R20523:20526 Poly <> ::x_'::'_x not
R20532:20535 Poly <> Some constr
R20677:20684 Poly <> hd_error def
def 20696:20709 <> test_hd_error1
R20727:20729 Coq.Init.Logic <> :type_scope:x_'='_x not
R20713:20720 Poly <> hd_error def
R20722:20722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20724:20724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20726:20726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20730:20733 Poly <> Some constr
def 20771:20784 <> test_hd_error2
R20807:20810 Coq.Init.Logic <> :type_scope:x_'='_x not
R20788:20795 Poly <> hd_error def
R20798:20798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20802:20802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20806:20806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20803:20803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20805:20805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20799:20799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20801:20801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20811:20814 Poly <> Some constr
R20816:20816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20818:20818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21505:21514 <> doit3times
R21529:21530 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21531:21531 Poly <> X var
R21528:21528 Poly <> X var
R21537:21537 Poly <> X var
R21542:21542 Poly <> X var
R21549:21549 Poly <> f var
R21552:21552 Poly <> f var
R21555:21555 Poly <> f var
R21557:21557 Poly <> n var
R21716:21725 Poly <> doit3times def
def 21797:21811 <> test_doit3times
R21835:21837 Coq.Init.Logic <> :type_scope:x_'='_x not
R21814:21823 Poly <> doit3times def
R21825:21832 Basics <> minustwo def
def 21876:21891 <> test_doit3times'
R21914:21916 Coq.Init.Logic <> :type_scope:x_'='_x not
R21894:21903 Poly <> doit3times def
R21910:21913 Basics <> true constr
R21905:21908 Basics <> negb def
R21917:21921 Basics <> false constr
def 22312:22317 <> filter
R22336:22337 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22338:22341 Basics <> bool ind
R22335:22335 Poly <> X var
R22347:22350 Poly <> list ind
R22352:22352 Poly <> X var
R22374:22377 Poly <> list ind
R22379:22379 Poly <> X var
R22393:22393 Poly <> l var
R22404:22405 Poly <> ::'['_']' not
R22414:22415 Poly <> ::'['_']' not
R22422:22425 Poly <> ::x_'::'_x not
R22434:22437 Poly <> test var
R22502:22507 Poly <> filter def
R22509:22512 Poly <> test var
R22447:22451 Poly <> ::x_'::'_x not
R22465:22465 Poly <> ::x_'::'_x not
R22452:22457 Poly <> filter def
R22459:22462 Poly <> test var
def 22693:22704 <> test_filter1
R22729:22731 Coq.Init.Logic <> :type_scope:x_'='_x not
R22707:22712 Poly <> filter def
R22720:22720 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22722:22722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22724:22724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22726:22726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22728:22728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22714:22718 Basics <> evenb def
R22732:22732 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22734:22734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22736:22736 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22777:22787 <> length_is_1
R22805:22808 Poly <> list ind
R22810:22810 Poly <> X var
R22815:22818 Basics <> bool ind
R22825:22831 Basics <> beq_nat def
R22834:22839 Poly <> length def
R22841:22841 Poly <> l var
def 22856:22867 <> test_filter2
R22942:22946 Coq.Init.Logic <> :type_scope:x_'='_x not
R22874:22879 Poly <> filter def
R22904:22905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22912:22913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22917:22918 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22922:22923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22931:22932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22935:22936 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22940:22941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22937:22937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22939:22939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22933:22934 Poly <> ::'['_']' not
R22924:22924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22926:22926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22928:22928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22930:22930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22919:22919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22921:22921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22914:22914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22916:22916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22906:22906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22908:22909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22911:22911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22881:22891 Poly <> length_is_1 def
R22947:22948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22952:22953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22957:22958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22962:22963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22959:22959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22961:22961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22954:22954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22956:22956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22949:22949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22951:22951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23122:23137 <> countoddmembers'
R23142:23145 Poly <> list ind
R23147:23149 Coq.Init.Datatypes <> nat ind
R23154:23156 Coq.Init.Datatypes <> nat ind
R23163:23168 Poly <> length def
R23171:23176 Poly <> filter def
R23183:23183 Poly <> l var
R23178:23181 Basics <> oddb def
def 23196:23217 <> test_countoddmembers'1
R23252:23254 Coq.Init.Logic <> :type_scope:x_'='_x not
R23222:23237 Poly <> countoddmembers' def
R23239:23239 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23241:23241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23243:23243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23245:23245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23247:23247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23249:23249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23251:23251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23292:23313 <> test_countoddmembers'2
R23342:23344 Coq.Init.Logic <> :type_scope:x_'='_x not
R23318:23333 Poly <> countoddmembers' def
R23335:23335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23337:23337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23339:23339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23341:23341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23382:23403 <> test_countoddmembers'3
R23428:23430 Coq.Init.Logic <> :type_scope:x_'='_x not
R23408:23423 Poly <> countoddmembers' def
R23425:23427 Poly <> nil constr
def 24209:24222 <> test_anon_fun'
R24256:24258 Coq.Init.Logic <> :type_scope:x_'='_x not
R24227:24236 Poly <> doit3times def
R24249:24251 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24248:24248 Poly <> n var
R24252:24252 Poly <> n var
def 24499:24511 <> test_filter2'
R24606:24610 Coq.Init.Logic <> :type_scope:x_'='_x not
R24518:24523 Poly <> filter def
R24568:24569 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24576:24577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24581:24582 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24586:24587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24595:24596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24599:24600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24604:24605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24601:24601 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24603:24603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24597:24598 Poly <> ::'['_']' not
R24588:24588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24590:24590 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24592:24592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24594:24594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24583:24583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24585:24585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24578:24578 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24580:24580 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24570:24570 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24572:24573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24575:24575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24535:24541 Basics <> beq_nat def
R24544:24549 Poly <> length def
R24551:24551 Poly <> l var
R24611:24612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24616:24617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24621:24622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24626:24627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24623:24623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24625:24625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24618:24618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24620:24620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24613:24613 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24615:24615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24929:24943 <> filter_even_gt7
R24950:24953 Poly <> list ind
R24955:24957 Coq.Init.Datatypes <> nat ind
R24962:24965 Poly <> list ind
R24967:24969 Coq.Init.Datatypes <> nat ind
R24976:24981 Poly <> filter def
R25021:25021 Poly <> l var
R24993:24993 Basics <> ::x_'&&'_x not
R25001:25006 Basics <> ::x_'&&'_x not
R25018:25018 Basics <> ::x_'&&'_x not
R24994:24998 Basics <> evenb def
R25000:25000 Poly <> l var
R25007:25013 Basics <> blt_nat def
R25017:25017 Poly <> l var
def 25033:25054 <> test_filter_even_gt7_1
R25095:25097 Coq.Init.Logic <> :type_scope:x_'='_x not
R25060:25074 Poly <> filter_even_gt7 def
R25076:25076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25078:25078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25080:25080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25082:25082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25084:25084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25087:25087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25089:25089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25092:25092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25094:25094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25098:25098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25101:25101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25104:25104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25106:25106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25143:25164 <> test_filter_even_gt7_2
R25200:25202 Coq.Init.Logic <> :type_scope:x_'='_x not
R25170:25184 Poly <> filter_even_gt7 def
R25186:25186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25188:25188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25190:25190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25192:25192 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25195:25195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25199:25199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25203:25204 Poly <> ::'['_']' not
def 25863:25871 <> partition
R25914:25917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25918:25921 Basics <> bool ind
R25913:25913 Poly <> X var
R25950:25953 Poly <> list ind
R25955:25955 Poly <> X var
R25985:25987 Poly <> :type_scope:x_'*'_x not
R25979:25982 Poly <> list ind
R25984:25984 Poly <> X var
R25988:25991 Poly <> list ind
R25993:25993 Poly <> X var
R26000:26000 Poly <> ::'('_x_','_x_')' not
R26014:26015 Poly <> ::'('_x_','_x_')' not
R26049:26049 Poly <> ::'('_x_','_x_')' not
R26001:26006 Poly <> filter def
R26013:26013 Poly <> l var
R26008:26011 Poly <> test var
R26016:26021 Poly <> filter def
R26048:26048 Poly <> l var
R26033:26036 Basics <> negb def
R26039:26042 Poly <> test var
R26044:26044 Poly <> x var
def 26061:26075 <> test_partition1
R26104:26106 Coq.Init.Logic <> :type_scope:x_'='_x not
R26078:26086 Poly <> partition def
R26093:26093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26095:26095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26097:26097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26099:26099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26101:26101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26103:26103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26088:26091 Basics <> oddb def
R26107:26107 Poly <> ::'('_x_','_x_')' not
R26115:26116 Poly <> ::'('_x_','_x_')' not
R26122:26122 Poly <> ::'('_x_','_x_')' not
R26108:26108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26110:26110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26112:26112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26114:26114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26117:26117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26119:26119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26121:26121 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26158:26172 <> test_partition2
R26209:26211 Coq.Init.Logic <> :type_scope:x_'='_x not
R26175:26183 Poly <> partition def
R26202:26202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26204:26204 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26206:26206 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26208:26208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26195:26199 Basics <> false constr
R26212:26212 Poly <> ::'('_x_','_x_')' not
R26215:26216 Poly <> ::'('_x_','_x_')' not
R26224:26224 Poly <> ::'('_x_','_x_')' not
R26213:26214 Poly <> ::'['_']' not
R26217:26217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26219:26219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26221:26221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26223:26223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26420:26422 <> map
R26439:26440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26441:26441 Poly <> Y var
R26438:26438 Poly <> X var
R26447:26450 Poly <> list ind
R26452:26452 Poly <> X var
R26458:26461 Poly <> list ind
R26463:26463 Poly <> Y var
R26477:26477 Poly <> l var
R26488:26489 Poly <> ::'['_']' not
R26498:26499 Poly <> ::'['_']' not
R26506:26509 Poly <> ::x_'::'_x not
R26515:26515 Poly <> ::x_'::'_x not
R26519:26524 Poly <> ::x_'::'_x not
R26532:26532 Poly <> ::x_'::'_x not
R26516:26516 Poly <> f var
R26525:26527 Poly <> map def
R26529:26529 Poly <> f var
def 26749:26757 <> test_map1
R26791:26793 Coq.Init.Logic <> :type_scope:x_'='_x not
R26760:26762 Poly <> map def
R26784:26784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26786:26786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26788:26788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26790:26790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26774:26777 Coq.Init.Peano <> plus syndef
R26781:26781 Poly <> x var
R26794:26794 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26796:26796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26798:26798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26800:26800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27094:27102 <> test_map2
R27125:27127 Coq.Init.Logic <> :type_scope:x_'='_x not
R27107:27109 Poly <> map def
R27116:27116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27118:27118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27120:27120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27122:27122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27124:27124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27111:27114 Basics <> oddb def
R27128:27128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27134:27134 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27139:27139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27145:27145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27150:27150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27146:27149 Basics <> true constr
R27140:27144 Basics <> false constr
R27135:27138 Basics <> true constr
R27129:27133 Basics <> false constr
def 27339:27347 <> test_map3
R27395:27399 Coq.Init.Logic <> :type_scope:x_'='_x not
R27354:27356 Poly <> map def
R27386:27386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27388:27388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27390:27390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27392:27392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27394:27394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27368:27368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27376:27376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27383:27383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27377:27380 Basics <> oddb def
R27382:27382 Poly <> n var
R27369:27373 Basics <> evenb def
R27375:27375 Poly <> n var
R27400:27400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27413:27413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27426:27426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27439:27439 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27452:27452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27440:27440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27446:27446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27451:27451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27447:27450 Basics <> true constr
R27441:27445 Basics <> false constr
R27427:27427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27432:27432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27438:27438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27433:27437 Basics <> false constr
R27428:27431 Basics <> true constr
R27414:27414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27420:27420 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27425:27425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27421:27424 Basics <> true constr
R27415:27419 Basics <> false constr
R27401:27401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27406:27406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27412:27412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27407:27411 Basics <> false constr
R27402:27405 Basics <> true constr
prf 27714:27722 <> map_assoc
R27752:27755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27756:27756 Poly <> Y var
R27751:27751 Poly <> X var
R27764:27767 Poly <> list ind
R27769:27769 Poly <> X var
R27776:27776 Poly <> X var
R27800:27802 Coq.Init.Logic <> :type_scope:x_'='_x not
R27784:27786 Poly <> map def
R27792:27795 Poly <> ::x_'++'_x not
R27791:27791 Poly <> l var
R27796:27796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27798:27798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27797:27797 Poly <> x var
R27788:27788 Poly <> f var
R27810:27813 Poly <> ::x_'++'_x not
R27803:27805 Poly <> map def
R27809:27809 Poly <> l var
R27807:27807 Poly <> f var
R27814:27814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27818:27818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27815:27815 Poly <> f var
R27817:27817 Poly <> x var
prf 27950:27956 <> map_rev
R27986:27989 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27990:27990 Poly <> Y var
R27985:27985 Poly <> X var
R27998:28001 Poly <> list ind
R28003:28003 Poly <> X var
R28022:28024 Coq.Init.Logic <> :type_scope:x_'='_x not
R28009:28011 Poly <> map def
R28016:28018 Poly <> rev def
R28020:28020 Poly <> l var
R28013:28013 Poly <> f var
R28025:28027 Poly <> rev def
R28030:28032 Poly <> map def
R28036:28036 Poly <> l var
R28034:28034 Poly <> f var
R28170:28178 Poly <> map_assoc thm
R28170:28178 Poly <> map_assoc thm
R28170:28178 Poly <> map_assoc thm
def 28677:28684 <> flat_map
R28701:28704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28705:28708 Poly <> list ind
R28710:28710 Poly <> Y var
R28700:28700 Poly <> X var
R28716:28719 Poly <> list ind
R28721:28721 Poly <> X var
R28746:28749 Poly <> list ind
R28751:28751 Poly <> Y var
R28765:28765 Poly <> l var
R28779:28781 Poly <> nil constr
R28786:28788 Poly <> nil constr
R28798:28801 Poly <> ::x_'::'_x not
R28810:28813 Poly <> ::x_'++'_x not
R28807:28807 Poly <> f var
R28814:28821 Poly <> flat_map def
R28823:28823 Poly <> f var
def 28846:28859 <> test_flat_map1
R28899:28903 Coq.Init.Logic <> :type_scope:x_'='_x not
R28864:28871 Poly <> flat_map def
R28892:28892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28894:28894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28896:28896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28898:28898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28883:28883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28885:28885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28887:28887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28889:28889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28888:28888 Poly <> n var
R28886:28886 Poly <> n var
R28884:28884 Poly <> n var
R28904:28904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28906:28907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28909:28910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28912:28913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28915:28916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28918:28919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28921:28922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28924:28925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28927:28928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28930:28930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29130:29139 <> option_map
R29160:29163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29164:29164 Poly <> Y var
R29159:29159 Poly <> X var
R29173:29178 Poly <> option ind
R29180:29180 Poly <> X var
R29207:29212 Poly <> option ind
R29214:29214 Poly <> Y var
R29227:29228 Poly <> xo var
R29241:29244 Poly <> None constr
R29249:29252 Poly <> None constr
R29260:29263 Poly <> Some constr
R29270:29273 Poly <> Some constr
R29276:29276 Poly <> f var
def 30116:30119 <> fold
R30137:30138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30140:30141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30142:30142 Poly <> Y var
R30139:30139 Poly <> Y var
R30136:30136 Poly <> X var
R30148:30151 Poly <> list ind
R30153:30153 Poly <> X var
R30159:30159 Poly <> Y var
R30189:30189 Poly <> Y var
R30202:30202 Poly <> l var
R30213:30215 Poly <> nil constr
R30220:30220 Poly <> b var
R30227:30230 Poly <> ::x_'::'_x not
R30236:30236 Poly <> f var
R30241:30244 Poly <> fold def
R30250:30250 Poly <> b var
R30246:30246 Poly <> f var
R30725:30728 Poly <> fold def
R30730:30733 Basics <> andb def
def 30795:30807 <> fold_example1
R30834:30836 Coq.Init.Logic <> :type_scope:x_'='_x not
R30813:30816 Poly <> fold def
R30823:30823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30825:30825 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30827:30827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30829:30829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30831:30831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30818:30821 Coq.Init.Peano <> mult syndef
def 30875:30887 <> fold_example2
R30930:30932 Coq.Init.Logic <> :type_scope:x_'='_x not
R30893:30896 Poly <> fold def
R30926:30929 Basics <> true constr
R30903:30903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30908:30908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30913:30913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30919:30919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30924:30924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30920:30923 Basics <> true constr
R30914:30918 Basics <> false constr
R30909:30912 Basics <> true constr
R30904:30907 Basics <> true constr
R30898:30901 Basics <> andb def
R30933:30937 Basics <> false constr
def 30974:30986 <> fold_example3
R31023:31025 Coq.Init.Logic <> :type_scope:x_'='_x not
R30992:30995 Poly <> fold def
R31021:31022 Poly <> ::'['_']' not
R31002:31002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31006:31006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31009:31009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31015:31015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31019:31019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31016:31016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31018:31018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31010:31010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31012:31012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31014:31014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31007:31008 Poly <> ::'['_']' not
R31003:31003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31005:31005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30997:30999 Poly <> app def
R31026:31026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31028:31028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31030:31030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31032:31032 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31034:31034 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32116:32123 <> constfun
R32139:32139 Poly <> X var
R32147:32148 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32149:32149 Poly <> X var
R32144:32146 Coq.Init.Datatypes <> nat ind
R32163:32165 Coq.Init.Datatypes <> nat ind
R32171:32171 Poly <> x var
def 32186:32190 <> ftrue
R32195:32202 Poly <> constfun def
R32204:32207 Basics <> true constr
def 32219:32235 <> constfun_example1
R32246:32248 Coq.Init.Logic <> :type_scope:x_'='_x not
R32239:32243 Poly <> ftrue def
R32249:32252 Basics <> true constr
def 32289:32305 <> constfun_example2
R32324:32326 Coq.Init.Logic <> :type_scope:x_'='_x not
R32310:32317 Poly <> constfun def
R32528:32531 Coq.Init.Peano <> plus syndef
def 33630:33634 <> plus3
R33639:33642 Coq.Init.Peano <> plus syndef
def 33656:33665 <> test_plus3
R33679:33681 Coq.Init.Logic <> :type_scope:x_'='_x not
R33672:33676 Poly <> plus3 def
def 33719:33729 <> test_plus3'
R33753:33755 Coq.Init.Logic <> :type_scope:x_'='_x not
R33735:33744 Poly <> doit3times def
R33746:33750 Poly <> plus3 def
def 33793:33804 <> test_plus3''
R33830:33832 Coq.Init.Logic <> :type_scope:x_'='_x not
R33809:33818 Poly <> doit3times def
R33821:33824 Coq.Init.Peano <> plus syndef
mod 33973:33981 <> Exercises
def 34183:34193 Exercises fold_length
R34211:34214 Poly <> list ind
R34216:34216 Poly <> X var
R34221:34223 Coq.Init.Datatypes <> nat ind
R34230:34233 Poly <> fold def
R34252:34252 Poly <> l var
R34247:34247 Coq.Init.Datatypes <> S constr
R34249:34249 Poly <> n var
def 34266:34282 Exercises test_fold_length1
R34305:34307 Coq.Init.Logic <> :type_scope:x_'='_x not
R34286:34296 Poly Exercises fold_length def
R34298:34298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34300:34300 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34302:34302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34304:34304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 34393:34411 Exercises fold_length_correct
R34429:34432 Poly <> list ind
R34434:34434 Poly <> X var
R34453:34455 Coq.Init.Logic <> :type_scope:x_'='_x not
R34440:34450 Poly Exercises fold_length def
R34452:34452 Poly <> l var
R34456:34461 Poly <> length def
R34463:34463 Poly <> l var
def 34737:34744 Exercises fold_map
R34763:34766 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34767:34767 Poly <> Y var
R34762:34762 Poly <> X var
R34775:34778 Poly <> list ind
R34780:34780 Poly <> X var
R34785:34788 Poly <> list ind
R34790:34790 Poly <> Y var
R34797:34800 Poly <> fold def
R34828:34829 Poly <> ::'['_']' not
R34826:34826 Poly <> l var
R34819:34822 Poly <> ::x_'++'_x not
R34814:34814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34818:34818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34815:34815 Poly <> f var
R34817:34817 Poly <> x var
R34823:34823 Poly <> l var
prf 34949:34964 Exercises fold_map_correct
R34985:34988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34989:34989 Poly <> Y var
R34984:34984 Poly <> X var
R34996:34999 Poly <> list ind
R35001:35001 Poly <> X var
R35021:35023 Coq.Init.Logic <> :type_scope:x_'='_x not
R35009:35016 Poly Exercises fold_map def
R35020:35020 Poly <> l var
R35018:35018 Poly <> f var
R35024:35026 Poly <> map def
R35030:35030 Poly <> l var
R35028:35028 Poly <> f var
def 35973:35982 Exercises prod_curry
R36011:36014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36015:36015 Poly <> Z var
R36007:36009 Poly <> :type_scope:x_'*'_x not
R36006:36006 Poly <> X var
R36010:36010 Poly <> Y var
R36023:36023 Poly <> X var
R36031:36031 Poly <> Y var
R36036:36036 Poly <> Z var
R36041:36041 Poly <> f var
R36043:36043 Poly <> ::'('_x_','_x_')' not
R36045:36046 Poly <> ::'('_x_','_x_')' not
R36048:36048 Poly <> ::'('_x_','_x_')' not
R36044:36044 Poly <> x var
R36047:36047 Poly <> y var
def 36193:36204 Exercises prod_uncurry
R36229:36232 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36234:36237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36238:36238 Poly <> Z var
R36233:36233 Poly <> Y var
R36228:36228 Poly <> X var
R36247:36249 Poly <> :type_scope:x_'*'_x not
R36246:36246 Poly <> X var
R36250:36250 Poly <> Y var
R36255:36255 Poly <> Z var
R36262:36262 Poly <> f var
R36273:36275 Poly <> snd def
R36277:36277 Poly <> p var
R36265:36267 Poly <> fst def
R36269:36269 Poly <> p var
def 36420:36429 Exercises test_map1'
R36452:36454 Coq.Init.Logic <> :type_scope:x_'='_x not
R36432:36434 Poly <> map def
R36445:36445 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36447:36447 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36449:36449 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36451:36451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36437:36440 Coq.Init.Peano <> plus syndef
R36455:36455 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36457:36457 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36459:36459 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36461:36461 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36631:36640 Poly Exercises prod_curry def
R36694:36705 Poly Exercises prod_uncurry def
prf 36761:36773 Exercises uncurry_curry
R36829:36832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36834:36837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36838:36838 Poly <> Z var
R36833:36833 Poly <> Y var
R36828:36828 Poly <> X var
R36903:36905 Coq.Init.Logic <> :type_scope:x_'='_x not
R36872:36881 Poly Exercises prod_curry def
R36902:36902 Poly <> y var
R36900:36900 Poly <> x var
R36884:36895 Poly Exercises prod_uncurry def
R36897:36897 Poly <> f var
R36906:36906 Poly <> f var
R36910:36910 Poly <> y var
R36908:36908 Poly <> x var
R36982:36984 Coq.Init.Logic <> :type_scope:x_'='_x not
R36955:36964 Poly Exercises prod_curry def
R36967:36978 Poly Exercises prod_uncurry def
R36982:36984 Coq.Init.Logic <> :type_scope:x_'='_x not
R36955:36964 Poly Exercises prod_curry def
R36967:36978 Poly Exercises prod_uncurry def
prf 37056:37068 Exercises curry_uncurry
R37123:37123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37129:37133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37134:37134 Poly <> Z var
R37125:37127 Poly <> :type_scope:x_'*'_x not
R37124:37124 Poly <> X var
R37128:37128 Poly <> Y var
R37143:37145 Poly <> :type_scope:x_'*'_x not
R37142:37142 Poly <> X var
R37146:37146 Poly <> Y var
R37181:37183 Coq.Init.Logic <> :type_scope:x_'='_x not
R37152:37163 Poly Exercises prod_uncurry def
R37180:37180 Poly <> p var
R37166:37175 Poly Exercises prod_curry def
R37177:37177 Poly <> f var
R37184:37184 Poly <> f var
R37186:37186 Poly <> p var
R37243:37246 Coq.Init.Logic <> :type_scope:x_'='_x not
R37265:37265 Coq.Init.Logic <> :type_scope:x_'='_x not
R37231:37240 Poly Exercises prod_curry def
R37260:37260 Poly <> ::'('_x_','_x_')' not
R37262:37262 Poly <> ::'('_x_','_x_')' not
R37264:37264 Poly <> ::'('_x_','_x_')' not
R37261:37261 Poly <> x var
R37263:37263 Poly <> y var
R37243:37246 Coq.Init.Logic <> :type_scope:x_'='_x not
R37265:37265 Coq.Init.Logic <> :type_scope:x_'='_x not
R37231:37240 Poly Exercises prod_curry def
R37260:37260 Poly <> ::'('_x_','_x_')' not
R37262:37262 Poly <> ::'('_x_','_x_')' not
R37264:37264 Poly <> ::'('_x_','_x_')' not
R37261:37261 Poly <> x var
R37263:37263 Poly <> y var
mod 38207:38212 <> Exercises.Church
def 38226:38228 Exercises.Church nat
R38250:38250 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38257:38261 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38263:38266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38267:38267 Poly <> X var
R38262:38262 Poly <> X var
R38252:38255 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38256:38256 Poly <> X var
R38251:38251 Poly <> X var
def 38423:38425 Exercises.Church one
R38429:38431 Poly Exercises.Church nat def
R38459:38462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38463:38463 Poly <> X var
R38458:38458 Poly <> X var
R38471:38471 Poly <> X var
R38477:38477 Poly <> f var
R38479:38479 Poly <> x var
def 38559:38561 Exercises.Church two
R38565:38567 Poly Exercises.Church nat def
R38595:38598 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38599:38599 Poly <> X var
R38594:38594 Poly <> X var
R38607:38607 Poly <> X var
R38613:38613 Poly <> f var
R38616:38616 Poly <> f var
R38618:38618 Poly <> x var
def 38798:38801 Exercises.Church zero
R38805:38807 Poly Exercises.Church nat def
R38835:38838 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38839:38839 Poly <> X var
R38834:38834 Poly <> X var
R38847:38847 Poly <> X var
R38853:38853 Poly <> x var
def 39128:39132 Exercises.Church three
R39136:39138 Poly Exercises.Church nat def
R39144:39153 Poly <> doit3times def
def 39361:39364 Exercises.Church succ
R39371:39373 Poly Exercises.Church nat def
R39378:39380 Poly Exercises.Church nat def
R39408:39411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39412:39412 Poly <> X var
R39407:39407 Poly <> X var
R39420:39420 Poly <> X var
R39426:39426 Poly <> f var
R39429:39429 Poly <> n var
R39435:39435 Poly <> x var
R39433:39433 Poly <> f var
R39431:39431 Poly <> X var
def 39449:39454 Exercises.Church succ_1
R39467:39469 Coq.Init.Logic <> :type_scope:x_'='_x not
R39458:39461 Poly Exercises.Church succ def
R39463:39466 Poly Exercises.Church zero def
R39470:39472 Poly Exercises.Church one def
def 39516:39521 Exercises.Church succ_2
R39533:39535 Coq.Init.Logic <> :type_scope:x_'='_x not
R39525:39528 Poly Exercises.Church succ def
R39530:39532 Poly Exercises.Church one def
R39536:39538 Poly Exercises.Church two def
def 39582:39587 Exercises.Church succ_3
R39599:39601 Coq.Init.Logic <> :type_scope:x_'='_x not
R39591:39594 Poly Exercises.Church succ def
R39596:39598 Poly Exercises.Church two def
R39602:39606 Poly Exercises.Church three def
def 39694:39697 Exercises.Church plus
R39706:39708 Poly Exercises.Church nat def
R39713:39715 Poly Exercises.Church nat def
R39743:39746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39747:39747 Poly <> X var
R39742:39742 Poly <> X var
R39755:39755 Poly <> X var
R39761:39761 Poly <> m var
R39768:39768 Poly <> n var
R39774:39774 Poly <> x var
R39772:39772 Poly <> f var
R39770:39770 Poly <> X var
R39765:39765 Poly <> f var
R39763:39763 Poly <> X var
def 39788:39793 Exercises.Church plus_1
R39810:39812 Coq.Init.Logic <> :type_scope:x_'='_x not
R39797:39800 Poly Exercises.Church plus def
R39807:39809 Poly Exercises.Church one def
R39802:39805 Poly Exercises.Church zero def
R39813:39815 Poly Exercises.Church one def
def 39859:39864 Exercises.Church plus_2
R39882:39884 Coq.Init.Logic <> :type_scope:x_'='_x not
R39868:39871 Poly Exercises.Church plus def
R39877:39881 Poly Exercises.Church three def
R39873:39875 Poly Exercises.Church two def
R39885:39888 Poly Exercises.Church plus def
R39896:39898 Poly Exercises.Church two def
R39890:39894 Poly Exercises.Church three def
def 39942:39947 Exercises.Church plus_3
R39978:39980 Coq.Init.Logic <> :type_scope:x_'='_x not
R39953:39956 Poly Exercises.Church plus def
R39973:39977 Poly Exercises.Church three def
R39959:39962 Poly Exercises.Church plus def
R39968:39970 Poly Exercises.Church two def
R39964:39966 Poly Exercises.Church two def
R39981:39984 Poly Exercises.Church plus def
R39991:39994 Poly Exercises.Church plus def
R40002:40006 Poly Exercises.Church three def
R39996:40000 Poly Exercises.Church three def
R39986:39988 Poly Exercises.Church one def
def 40078:40081 Exercises.Church mult
R40090:40092 Poly Exercises.Church nat def
R40097:40099 Poly Exercises.Church nat def
R40128:40131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40132:40132 Poly <> X var
R40127:40127 Poly <> X var
R40140:40140 Poly <> X var
R40146:40146 Poly <> n var
R40158:40158 Poly <> x var
R40151:40151 Poly <> m var
R40155:40155 Poly <> f var
R40153:40153 Poly <> X var
R40148:40148 Poly <> X var
def 40171:40176 Exercises.Church mult_1
R40192:40194 Coq.Init.Logic <> :type_scope:x_'='_x not
R40180:40183 Poly Exercises.Church mult def
R40189:40191 Poly Exercises.Church one def
R40185:40187 Poly Exercises.Church one def
R40195:40197 Poly Exercises.Church one def
def 40241:40246 Exercises.Church mult_2
R40278:40280 Coq.Init.Logic <> :type_scope:x_'='_x not
R40250:40253 Poly Exercises.Church mult def
R40261:40264 Poly Exercises.Church plus def
R40272:40276 Poly Exercises.Church three def
R40266:40270 Poly Exercises.Church three def
R40255:40258 Poly Exercises.Church zero def
R40281:40284 Poly Exercises.Church zero def
def 40328:40333 Exercises.Church mult_3
R40351:40353 Coq.Init.Logic <> :type_scope:x_'='_x not
R40337:40340 Poly Exercises.Church mult def
R40346:40350 Poly Exercises.Church three def
R40342:40344 Poly Exercises.Church two def
R40354:40357 Poly Exercises.Church plus def
R40365:40369 Poly Exercises.Church three def
R40359:40363 Poly Exercises.Church three def
def 40695:40697 Exercises.Church exp
R40706:40708 Poly Exercises.Church nat def
R40713:40715 Poly Exercises.Church nat def
R40744:40747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40748:40748 Poly <> X var
R40743:40743 Poly <> X var
R40756:40756 Poly <> X var
R40762:40762 Poly <> m var
R40781:40781 Poly <> x var
R40779:40779 Poly <> f var
R40774:40774 Poly <> n var
R40776:40776 Poly <> X var
R40766:40769 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40770:40770 Poly <> X var
R40765:40765 Poly <> X var
def 40795:40799 Exercises.Church exp_1
R40814:40816 Coq.Init.Logic <> :type_scope:x_'='_x not
R40803:40805 Poly Exercises.Church exp def
R40811:40813 Poly Exercises.Church two def
R40807:40809 Poly Exercises.Church two def
R40817:40820 Poly Exercises.Church plus def
R40826:40828 Poly Exercises.Church two def
R40822:40824 Poly Exercises.Church two def
def 40865:40869 Exercises.Church exp_2
R40886:40888 Coq.Init.Logic <> :type_scope:x_'='_x not
R40873:40875 Poly Exercises.Church exp def
R40883:40885 Poly Exercises.Church two def
R40877:40881 Poly Exercises.Church three def
R40889:40892 Poly Exercises.Church plus def
R40920:40922 Poly Exercises.Church one def
R40895:40898 Poly Exercises.Church mult def
R40905:40908 Poly Exercises.Church mult def
R40914:40916 Poly Exercises.Church two def
R40910:40912 Poly Exercises.Church two def
R40900:40902 Poly Exercises.Church two def
def 40959:40963 Exercises.Church exp_3
R40981:40983 Coq.Init.Logic <> :type_scope:x_'='_x not
R40967:40969 Poly Exercises.Church exp def
R40977:40980 Poly Exercises.Church zero def
R40971:40975 Poly Exercises.Church three def
R40984:40986 Poly Exercises.Church one def
R41019:41024 Poly Exercises.Church <> mod
R41042:41050 Poly Exercises <> mod
